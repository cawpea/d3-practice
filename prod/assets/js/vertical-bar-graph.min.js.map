{"version":3,"sources":["assets/js/vertical-bar-graph.js"],"names":["d3","csv","error","data","dataSet","labelName","i","push","svgEle","document","getElementById","svgWidth","window","getComputedStyle","getPropertyValue","svgHeight","parseFloat","barElements","offsetX","offsetY","dataMax","barWidth","barMargin","select","selectAll","enter","append","attr","d","on","this","style","transition","duration","delay","text","yScale","scaleLinear","domain","range","call","axisLeft","ticks","tickFormat","format"],"mappings":"AAAAA,GAAGC,IAAI,mBAAoB,SAASC,EAAOC,GACzC,GAAIC,MACAC,IACJ,KAAI,GAAIC,KAAKH,GAAK,GAChBC,EAAQG,KAAKJ,EAAK,GAAGG,IACrBD,EAAUE,KAAKD,EAGjB,IAAIE,GAASC,SAASC,eAAe,WACjCC,EAAWC,OAAOC,iBAAiBL,EAAQ,MAAMM,iBAAiB,SAClEC,EAAYH,OAAOC,iBAAiBL,EAAQ,MAAMM,iBAAiB,SACvEH,GAAWK,WAAWL,GACtBI,EAAYC,WAAWD,EAEvB,IAEIE,GAFAC,EAAU,GACVC,EAAU,GAEVC,EAAU,IACVC,EAAW,GACXC,EAAY,EAGhBL,GAAcjB,GAAGuB,OAAO,YACrBC,UAAU,QACVrB,KAAMC,GAGTa,EAAYQ,QACTC,OAAO,QACPC,KAAK,QAAS,OACdA,KAAK,SAAU,GACfA,KAAK,QAASN,GACdM,KAAK,IAAK,SAASC,EAAGtB,GACrB,MAAOY,GAAUZ,GAAKe,EAAWC,KAElCK,KAAK,IAAKZ,EAAYI,GACtBU,GAAG,YAAa,WACf7B,GAAGuB,OAAOO,MACPC,MAAM,OAAQ,SAElBF,GAAG,WAAY,WACd7B,GAAGuB,OAAOO,MACPC,MAAM,OAAQ,YAElBC,aACAC,SAAS,KACTC,MAAM,SAASN,EAAGtB,GACjB,MAAW,KAAJA,IAERqB,KAAK,IAAK,SAASC,EAAGtB,GACrB,MAAOS,GAAYa,EAAIT,IAExBQ,KAAK,SAAU,SAASC,EAAGtB,GAC1B,MAAOsB,KAGXX,EAAYQ,QACTC,OAAO,QACPC,KAAK,QAAS,UACdA,KAAK,IAAK,SAASC,EAAGtB,GACrB,MAAOY,GAAUZ,GAAKe,EAAWC,GAAa,KAE/CK,KAAK,IAAKZ,EAAY,EAAII,GAC1BgB,KAAK,SAASP,EAAGtB,GAChB,MAAOsB,IAIX,IAAIQ,GAASpC,GAAGqC,cACbC,QAAQ,EAAGlB,IACXmB,OAAOnB,EAAS,GAEnBpB,IAAGuB,OAAO,YACPG,OAAO,KACPC,KAAK,QAAS,QACdA,KAAK,YAAa,aAAeT,EAAU,MAASH,EAAY,IAAOI,GAAW,KAClFqB,KACCxC,GAAGyC,SAASL,GAETM,MAAM,GAENC,WAAW3C,GAAG4C,OAAO,SAI5B5C,GAAGuB,OAAO,YACPG,OAAO,QACPC,KAAK,QAAS,UACdA,KAAK,QAAS,KACdA,KAAK,SAAU,GACfA,KAAK,YAAa,aAAeT,EAAU,MAAQH,EAAYI,GAAW,KAG7EF,EAAYQ,QACTC,OAAO,QACPC,KAAK,QAAS,WACdA,KAAK,IAAK,SAASC,EAAGtB,GACrB,MAAOA,IAAKe,EAAWC,GAAa,GAAKJ,IAE1CS,KAAK,IAAKZ,EAAYI,EAAU,IAChCgB,KAAK,SAASP,EAAGtB,GAChB,MAAOD,GAAUC,IACf,IAAIgB,GAAY","file":"vertical-bar-graph.min.js","sourcesContent":["d3.csv('/data/mydata.csv', function(error, data) {\n  var dataSet = [];\n  var labelName = [];\n  for(var i in data[0]) {\n    dataSet.push(data[0][i]);\n    labelName.push(i);\n  }\n  //svg要素の幅と高さを求める\n  var svgEle = document.getElementById('myGraph');\n  var svgWidth = window.getComputedStyle(svgEle, null).getPropertyValue('width');\n  var svgHeight = window.getComputedStyle(svgEle, null).getPropertyValue('height');\n  svgWidth = parseFloat(svgWidth);\n  svgHeight = parseFloat(svgHeight);\n\n  var offsetX = 50;\n  var offsetY = 10;\n  var barElements;\n  var dataMax = 300;\n  var barWidth = 20;\n  var barMargin = 30;\n\n   // グラフを描画\n  barElements = d3.select('#myGraph')\n    .selectAll('rect')\n    .data( dataSet );\n\n  // データの追加\n  barElements.enter()\n    .append('rect')\n    .attr('class', 'bar')\n    .attr('height', 0)\n    .attr('width', barWidth)\n    .attr('x', function(d, i) {\n      return offsetX + i * (barWidth + barMargin);\n    })\n    .attr('y', svgHeight - offsetY)\n    .on('mouseover', function() {\n      d3.select(this)\n        .style('fill', 'red');\n    })\n    .on('mouseout', function() {\n      d3.select(this)\n        .style('fill', 'orange');\n    })\n    .transition()\n    .duration(3000)\n    .delay(function(d, i) {\n      return i * 100;\n    })\n    .attr('y', function(d, i) {\n      return svgHeight - d - offsetY;\n    })\n    .attr('height', function(d, i) {\n      return d;\n    });\n\n  barElements.enter()\n    .append('text')\n    .attr('class', 'barNum')\n    .attr('x', function(d, i) {\n      return offsetX + i * (barWidth + barMargin) + 10;\n    })\n    .attr('y', svgHeight - 5 - offsetY )\n    .text(function(d, i) {\n      return d;\n    });\n\n  // 目盛りを表示するためにスケールを設定\n  var yScale = d3.scaleLinear() //スケールを設定\n    .domain([0, dataMax]) //元のデータ範囲\n    .range([dataMax, 0]); //実際の出力サイズ\n\n  d3.select('#myGraph')\n    .append('g')\n    .attr('class', 'axis')\n    .attr('transform', 'translate(' + offsetX + ', ' + ((svgHeight - 300) - offsetY) + ')')\n    .call(\n      d3.axisLeft(yScale)\n        //目盛りの数を指定\n        .ticks(4)\n        // 目盛りの書式を指定\n        .tickFormat(d3.format('.1f'))\n    );\n\n  //横方向の線を引く\n  d3.select('#myGraph')\n    .append('rect')\n    .attr('class', 'axis_x')\n    .attr('width', 320)\n    .attr('height', 1)\n    .attr('transform', 'translate(' + offsetX + ', ' + (svgHeight - offsetY) + ')');\n\n  //某のラベルを表示する\n  barElements.enter()\n    .append('text')\n    .attr('class', 'barName')\n    .attr('x', function(d, i) {\n      return i * (barWidth + barMargin) + 10 + offsetX;\n    })\n    .attr('y', svgHeight - offsetY + 10)\n    .text(function(d, i) {\n      return labelName[i];\n    }); var barMargin = 5;\n});\n\n"],"sourceRoot":"SORUCE_DIR"}