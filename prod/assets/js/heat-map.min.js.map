{"version":3,"sources":["assets/js/heat-map.js"],"names":["drawHeatMap","context","d3","select","node","getContext","headMap","selectAll","data","dataSet","enter","append","attr","d","i","blockSize","Math","floor","style","color","maxValue","setInterval","length","n","random","x","y","fillStyle","fillRect","drawHeatMapByHtml","heatMap","len","svgWidth","svgHeight","interpolateHsl","max"],"mappings":"AAiBA,QAASA,eACP,GAAIC,GAAUC,GAAGC,OAAO,aAAaC,OAAOC,WAAW,MAGnDC,EAAUJ,GAAGC,OAAO,YACrBI,UAAU,QACVC,KAAKC,QAGRH,GAAQI,QACLC,OAAO,QACPC,KAAK,QAAS,SACdA,KAAK,IAAK,SAASC,EAAGC,GACrB,MAAQA,GAAI,EAAKC,YAElBH,KAAK,IAAK,SAASC,EAAGC,GACrB,MAAOE,MAAKC,MAAMH,EAAE,GAAKC,YAE1BH,KAAK,QAAS,SAASC,EAAGC,GACzB,MAAOC,aAERH,KAAK,SAAU,SAASC,EAAGC,GAC1B,MAAOC,aAERG,MAAM,OAAQ,SAASL,EAAGC,GACzB,MAAOK,OAAMN,EAAEO,YAGnBC,YAAY,WACV,IAAK,GAAIP,GAAI,EAAGA,EAAIL,QAAQa,OAAQR,IAAM,CACxC,GAAIS,IAAsB,IAAhBP,KAAKQ,SAAkB,GAAK,CACtCf,SAAQK,GAAKL,QAAQK,GAAKS,EACtBd,QAAQK,GAAK,IACfL,QAAQK,GAAK,GAEXL,QAAQK,GAAKM,WACfX,QAAQK,GAAKM,UAGjBd,EAAUJ,GAAGC,OAAO,YACjBI,UAAU,QACVC,KAAKC,SACLS,MAAM,OAAQ,SAASL,EAAGC,GAEzB,GAAIW,GAAKX,EAAI,EAAKC,UACdW,EAAIV,KAAKC,MAAMH,EAAE,GAAKC,SAI1B,OAHAd,GAAQ0B,UAAYR,MAAMN,EAAEO,UAC5BnB,EAAQ2B,SAASH,EAAGC,EAAGX,UAAWA,WAE3BI,MAAMN,EAAEO,aAElB,KAGL,QAASS,qBACP,GAAIC,GAAU5B,GAAGC,OAAO,cACrBI,UAAU,OACVC,KAAKC,QAERqB,GAAQpB,QACLC,OAAO,OACPC,KAAK,QAAS,SACdM,MAAM,OAAQ,SAASL,EAAGC,GACzB,MAASA,GAAI,EAAKC,UAAa,OAEhCG,MAAM,MAAO,SAASL,EAAGC,GACxB,MAAQE,MAAKC,MAAMH,EAAE,GAAKC,UAAa,OAExCG,MAAM,mBAAoB,SAASL,EAAGC,GACrC,MAAOK,OAAMN,EAAEO,YAGnBC,YAAY,WACV,IAAK,GAAIP,GAAI,EAAGiB,EAAMtB,QAAQa,OAAQR,EAAIiB,EAAKjB,IAAM,CACnD,GAAIS,IAAsB,IAAhBP,KAAKQ,SAAkB,GAAK,CACtCf,SAAQK,GAAKL,QAAQK,GAAKS,EAEtBd,QAAQK,GAAK,IACfL,QAAQK,IAAMS,GAEZd,QAAQK,GAAKM,WACfX,QAAQK,GAAKM,UAGjBU,EAAU5B,GAAGC,OAAO,cACjBI,UAAU,OACVC,KAAMC,SACNS,MAAM,mBAAoB,SAASL,EAAGC,GACrC,MAAOK,OAAMN,EAAEO,aAElB,KA3GL,GAAIY,UAAW,IACXC,UAAY,IACZlB,UAAY,GAEZN,SACF,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAInBU,MAAQjB,GAAGgC,eAAe,OAAQ,UAClCd,SAAWlB,GAAGiC,IAAI1B,UA+FrB,WACCT,cACA6B","file":"heat-map.min.js","sourcesContent":["var svgWidth = 160;\nvar svgHeight = 240;\nvar blockSize = 20;\n\nvar dataSet = [\n  0, 1, 2, 3, 3, 4, 5, 4,\n  0, 0, 0, 3, 4, 4, 5, 3,\n  1, 0, 0, 0, 0, 0, 0, 0,\n  2, 6, 8, 7, 0, 0, 0, 2,\n  4, 8, 9, 8, 0, 0, 1, 0,\n  2, 6, 8, 6, 4, 0, 0, 0\n];\n\n//ヒートマップに表示するカラーを自動計算\nvar color = d3.interpolateHsl('blue', 'yellow');\nvar maxValue = d3.max(dataSet);\n\nfunction drawHeatMap() {\n  var context = d3.select('#myCanvas').node().getContext('2d');\n\n  //ヒートマップの準備\n  var headMap = d3.select('#myGraph')\n    .selectAll('rect')\n    .data(dataSet);\n\n  //ヒートマップを表示\n  headMap.enter()\n    .append('rect')\n    .attr('class', 'block')\n    .attr('x', function(d, i) {\n      return (i % 8) * blockSize;\n    })\n    .attr('y', function(d, i) {\n      return Math.floor(i/8) * blockSize;\n    })\n    .attr('width', function(d, i) {\n      return blockSize;\n    })\n    .attr('height', function(d, i) {\n      return blockSize;\n    })\n    .style('fill', function(d, i) {\n      return color(d/maxValue);\n    });\n\n  setInterval(function() {\n    for( var i = 0; i < dataSet.length; i++ ) {\n      var n = ((Math.random() * 3.5) | 0) - 2;\n      dataSet[i] = dataSet[i] + n;\n      if (dataSet[i] < 0) {\n        dataSet[i] = 0;\n      }\n      if (dataSet[i] > maxValue) {\n        dataSet[i] = maxValue;\n      }\n    }\n    headMap = d3.select('#myGraph')\n      .selectAll('rect')\n      .data(dataSet)\n      .style('fill', function(d, i) {\n        //Canvasに塗りつぶされた四角形を表示\n        var x = (i % 8) * blockSize;\n        var y = Math.floor(i/8) * blockSize;\n        context.fillStyle = color(d/maxValue);\n        context.fillRect(x, y, blockSize, blockSize);\n\n        return color(d/maxValue);\n      });\n  }, 1000);\n}\n\nfunction drawHeatMapByHtml() {\n  var heatMap = d3.select('#htmlGraph')\n    .selectAll('div')\n    .data(dataSet);\n\n  heatMap.enter()\n    .append('div')\n    .attr('class', 'block')\n    .style('left', function(d, i) {\n      return ((i % 8) * blockSize) + 'px';\n    })\n    .style('top', function(d, i) {\n      return (Math.floor(i/8) * blockSize) + 'px';\n    })\n    .style('background-color', function(d, i) {\n      return color(d/maxValue);\n    });\n\n  setInterval(function() {\n    for( var i = 0, len = dataSet.length; i < len; i++ ) {\n      var n = ((Math.random() * 3.5) | 0) - 2;\n      dataSet[i] = dataSet[i] + n;\n\n      if( dataSet[i] < 0 ) {\n        dataSet[i] += n;\n      }\n      if( dataSet[i] > maxValue ) {\n        dataSet[i] = maxValue;\n      }\n    }\n    heatMap = d3.select('#htmlGraph')\n      .selectAll('div')\n      .data( dataSet )\n      .style('background-color', function(d, i) {\n        return color(d/maxValue);\n      });\n  }, 1000)\n}\n\n(function() {\n  drawHeatMap();\n  drawHeatMapByHtml();\n}());"],"sourceRoot":"SORUCE_DIR"}