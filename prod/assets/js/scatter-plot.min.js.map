{"version":3,"sources":["assets/js/scatter-plot.js"],"names":["updateData","data","result","map","d","i","x","Math","round","random","svgWidth","y","svgHeight","updateGraph","circleElements","d3","select","selectAll","dataSet","transition","attr","xScale","offsetX","yScale","offsetY","drawScale","maxX","max","maxY","scaleLinear","domain","range","yAxisHeight","svg","append","call","axisLeft","xAxisWidth","axisBottom","grid","rangeX","rangeY","enter","init","tooltip","forEach","push","total","bug","time","on","parseInt","this","datum","t","style","text","duration","ease","easeBounce","svgEle","document","getElementById","window","getComputedStyle","getPropertyValue","parseFloat","csv","error"],"mappings":"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","file":"scatter-plot.min.js","sourcesContent":["var svg = d3.select('#myGraph');\nvar svgEle = document.getElementById('myGraph');\nvar svgWidth = window.getComputedStyle(svgEle, null).getPropertyValue('width');\nvar svgHeight = window.getComputedStyle(svgEle, null).getPropertyValue('height');\nsvgWidth = parseFloat(svgWidth);\nsvgHeight = parseFloat(svgHeight);\n\nvar offsetX = 30;\nvar offsetY = 20;\nvar xScale;\nvar yScale;\nvar yAxisHeight = svgHeight - 20;\nvar xAxisWidth = svgWidth - 40;\n\nvar circleElements;\nvar dataSet = [];\n\n// データセットの更新\nfunction updateData(data) {\n  var result = data.map(function(d, i) {\n    var x = Math.round(Math.random() * svgWidth);\n    var y = Math.round(Math.random() * svgHeight);\n    return [x, y];\n  });\n  return result;\n}\n\n//散布図の更新\nfunction updateGraph() {\n  circleElements = d3.select('#myGraph')\n    .selectAll('circle')\n    .data( dataSet )\n    .transition()\n    .attr('cx', function(d, i) {\n      return xScale(d[0]) + offsetX;\n    })\n    .attr('cy', function(d, i) {\n      return svgHeight - yScale(d[1]) - offsetY;\n    });\n}\n\n//目盛りの表示\nfunction drawScale() {\n  var maxX = d3.max(dataSet, function(d, i) {\n    return d[0];\n  });\n  var maxY = d3.max(dataSet, function(d, i) {\n    return d[1];\n  })\n  //縦の目盛りを表示するためにD3スケールを設定\n  yScale = d3.scaleLinear()\n    .domain([0, maxY]) //元のデータ範囲\n    .range([yAxisHeight, 0]); //実際の出力サイズ\n\n  //目盛りを表示\n  svg\n    .append('g')\n    .attr('class', 'axis')\n    .attr('transform', 'translate(' + offsetX + ', ' + (svgHeight - yAxisHeight - offsetY) + ')')\n    .call(\n      d3.axisLeft(yScale)\n    );\n\n  //横の目盛りを表示するためにD3スケールを設定\n  xScale = d3.scaleLinear()\n    .domain([0, maxX])\n    .range([0, xAxisWidth]);\n\n  //目盛りを表示\n  svg\n    .append('g')\n    .attr('class', 'axis')\n    .attr('transform', 'translate(' + offsetX + ', ' + (svgHeight - offsetY) + ')')\n    .call(\n      d3.axisBottom(xScale)\n    );\n\n  //グリッドの表示\n  var grid = svg.append('g');\n  // 横方向と縦方向のグリッド間隔を自動生成\n  var rangeX = d3.range(50, maxX, 50);\n  var rangeY = d3.range(20, maxY, 20);\n\n  //縦方向のグリッドを生成\n  grid.selectAll('line.y')\n    .data(rangeY)\n    .enter()\n    .append('line')\n    .attr('class', 'grid')\n    .attr('x1', offsetX)\n    .attr('y1', function(d, i) {\n      return svgHeight - yScale(d) - offsetY;\n    })\n    .attr('x2', maxX + offsetX)\n    .attr('y2', function(d, i) {\n      return svgHeight - yScale(d) - offsetY;\n    });\n\n  //横方向のグリッドを生成\n  grid.selectAll('line.x')\n    .data(rangeX)\n    .enter()\n    .append('line')\n    .attr('class', 'grid')\n    .attr('x1', function(d, i) {\n      return xScale(d) + offsetX;\n    })\n    .attr('y1', svgHeight - offsetY)\n    .attr('x2', function(d, i) {\n      return xScale(d) + offsetX;\n    })\n    .attr('y2', svgHeight - yAxisHeight - offsetY);\n}\n\nfunction init(data) {\n  //ツールチップを表示する\n  var tooltip = d3.select('body')\n    .append('div')\n    .attr('class', 'tip');\n\n  data.forEach(function(d, i) {\n    dataSet.push([ d.total/100, d.bug*1, d.time*1 ]);\n  });\n\n  //目盛りを表示する\n  drawScale();\n\n  //散布図を描画\n  circleElements = svg\n    .selectAll('circle')\n    .data(dataSet);\n\n  circleElements\n    .enter()\n    .append('circle')\n    .attr('class', 'mark')\n    .attr('cx', svgWidth / 2 + offsetX)\n    .attr('cy', svgHeight / 2 - offsetY)\n    .attr('r', 100)\n    .attr('opacity', 0)\n    .on('mouseover', function(d) {\n      var x = parseInt( xScale(d[0]) );\n      var y = parseInt( yScale(d[1]) );\n      var data = d3.select(this).datum(); //要素のデータを読み出す\n      var dx = parseInt(data[0]);\n      var dy = parseInt(data[1]);\n      var t = parseInt(data[2]);\n\n      tooltip\n        .style('left', (offsetX + x) + 'px')\n        .style('top', (offsetY +  30 + y) + 'px')\n        .style('visibility', 'visible')\n        .text( t + '時間' );\n    })\n    .on('mouseout', function() {\n      tooltip.style('visibility', 'hidden');\n    })\n    .transition()\n    .duration(2000)\n    .ease( d3.easeBounce )\n    .attr('cx', function(d, i) {\n      return xScale(d[0]) + offsetX;\n    })\n    .attr('cy', function(d, i) {\n      return yScale(d[1]);\n    })\n    .attr('r', 5)\n    .attr('opacity', 1.0);\n\n  // // タイマーを使って２秒毎に位置を変化させる\n  // setInterval(function() {\n  //   dataSet = updateData(dataSet);\n  //   updateGraph();\n  // }, 5000);\n}\n\n(function() {\n  d3.csv('/data/scatter-plot.csv', function(error, data) {\n    init(data);\n  });\n}());"],"sourceRoot":"SORUCE_DIR"}