{"version":3,"sources":["assets/js/line.js"],"names":["render","year","d3","extent","data","d","startYear","currentYear","margin","svgWidth","rangeYear","this","drawGraphs","pickupData","drawGraph","dataSet","drawScale","itemName","cssClassName","line","x","i","offsetX","y","svgHeight","scale","offsetY","curve","curveNatural","select","append","attr","yScale","scaleLinear","domain","range","call","axisLeft","xScale","scaleTime","Date","axisBottom","ticks","tickFormat","fmtFunc","timeFormat","selectAll","style","start","remove","svgEle","document","getElementById","window","getComputedStyle","getPropertyValue","parseFloat","json","error","on"],"mappings":"AAkBA,QAASA,UACPC,KAAOC,GAAGC,OAAOC,KAAM,SAASC,GAC9B,MAAOA,GAAEJ,OAEXK,UAAYL,KAAK,GACjBM,YAAc,IACdC,OAASC,UAAYC,UAAY,GACjCC,KAAKC,aAGP,QAASA,cAEPC,WAAWT,KAAMG,YAAcD,WAE/BQ,UAAWC,QAAS,QAAS,SAC7BD,UAAWC,QAAS,QAAS,SAC7BD,UAAWC,QAAS,QAAS,SAC7BC,YAIF,QAASF,WAAUC,EAASE,EAAUC,GAEpC,GAAIC,GAAOjB,GAAGiB,OACXC,EAAE,SAASf,EAAGgB,GACb,MAAOC,SAAUD,EAAIb,SAEtBe,EAAE,SAASlB,EAAGgB,GACb,MAAOG,WAAanB,EAAEY,GAAYQ,MAASC,UAG5CC,MAAMzB,GAAG0B,aAGO1B,IAAG2B,OAAO,YAC1BC,OAAO,QACPC,KAAK,QAAS,QAAUb,GACxBa,KAAK,IAAKZ,EAAKJ,IAIpB,QAASC,aAEP,GAAIgB,GAAS9B,GAAG+B,cACbC,QAAQ,EAAG,MACXC,OAAe,IAARV,MAAa,GAGvBvB,IAAG2B,OAAO,YACPC,OAAO,KACPC,KAAK,QAAS,QACdA,KAAK,YAAa,aAAeT,QAAU,MAAS,IAAoB,KAAbG,MAAQ,GAAYC,SAAW,KAC1FU,KACClC,GAAGmC,SAASL,IAIhB9B,GAAG2B,OAAO,YACPC,OAAO,QACPC,KAAK,QAAS,UACdA,KAAK,QAAStB,UACdsB,KAAK,SAAU,GACfA,KAAK,YAAa,aAAeT,QAAU,MAASE,UAAYE,SAAY,IAG/E,IAAIY,GAASpC,GAAGqC,YACbL,QAAQ,GAAIM,MAAMjC,YAAc,QAAS,GAAIiC,MAAOjC,YAAcG,UAAY,EAAK,UACnFyB,OAAO,EAAG1B,UAGbP,IAAG2B,OAAO,YACPC,OAAO,KACPC,KAAK,QAAS,QACdA,KAAK,YAAa,aAAeT,QAAU,MAASE,UAAYE,SAAY,KAC5EU,KACClC,GAAGuC,WAAWH,GACXI,MAAM,IACNC,WAAW,SAAStC,EAAGgB,GACtB,GAAIuB,GAAU1C,GAAG2C,WAAW,SAC5B,OAAOD,GAAQvC,MAGpByC,UAAU,QACVf,KAAK,YAAa,cAClBA,KAAK,KAAM,SACXA,KAAK,KAAM,UACXgB,MAAM,cAAe,SAI1B,QAASlC,YAAWT,EAAM4C,GACxBjC,UACA,KAAI,GAAIM,GAAI,EAAGA,EAAIX,UAAWW,IAC5BN,QAAQM,GAAKjB,EAAK4C,EAAQ3B,GAC1BnB,GAAG2B,OAAO,YAAYiB,UAAU,KAAKG,SAhHzC,GAAIlC,YACAmC,OAASC,SAASC,eAAe,WACjC3C,SAAW4C,OAAOC,iBAAiBJ,OAAQ,MAAMK,iBAAiB,SAClE/B,UAAY6B,OAAOC,iBAAiBJ,OAAQ,MAAMK,iBAAiB,SACvE9C,UAAW+C,WAAW/C,UAAY,GAClCe,UAAYgC,WAAWhC,WAAa,EAEpC,IAAIF,SAAU,GACVI,QAAU,GACVD,MAAQ,EACRf,UAAY,GAGZT,KACAK,UACAC,YACAC,QAoGH,WACCN,GAAGuD,KAAK,oBAAqB,SAASC,EAAOrD,GAC3CD,KAAOC,EACPL,WAGFE,GAAG2B,OAAO,SAAS8B,GAAG,QAAS,WAEzBpD,YAAcN,KAAK,KACrBM,aAA4B,GAG9BK,eAGFV,GAAG2B,OAAO,SAAS8B,GAAG,QAAS,WAEzBpD,aAAeN,KAAK,GAAKS,YAC3BH,aAA4B,GAG9BK","file":"line.min.js","sourcesContent":["var dataSet = [];\nvar svgEle = document.getElementById('myGraph');\nvar svgWidth = window.getComputedStyle(svgEle, null).getPropertyValue('width');\nvar svgHeight = window.getComputedStyle(svgEle, null).getPropertyValue('height');\nsvgWidth = parseFloat(svgWidth) - 60; //値は単位付きなので単位を削除する\nsvgHeight = parseFloat(svgHeight) - 60; //値は単位付きなので単位を削除する\n\nvar offsetX = 30;\nvar offsetY = 20;\nvar scale = 2.0;\nvar rangeYear = 10; //10年分を表示\n\n//最大値と最小値の年数を求める\nvar year;\nvar startYear; //最初の年\nvar currentYear; //最初の表示基準年\nvar margin;\n\nfunction render() {\n  year = d3.extent(data, function(d) {\n    return d.year;\n  });\n  startYear = year[0]; //最初の年\n  currentYear = 2000; //最初の表示基準年\n  margin = svgWidth / (rangeYear - 1);\n  this.drawGraphs();\n}\n\nfunction drawGraphs() {\n  //最初にグラフを表示する\n  pickupData(data, currentYear - startYear)\n\n  drawGraph( dataSet, 'item1', 'itemA' );\n  drawGraph( dataSet, 'item2', 'itemB' );\n  drawGraph( dataSet, 'item3', 'itemC' );\n  drawScale();\n}\n\n//折れ線グラフを表示するための関数\nfunction drawGraph(dataSet, itemName, cssClassName) {\n  //折れ線グラフの座標値を計算するメソッド\n  var line = d3.line()\n    .x(function(d, i) {\n      return offsetX + i * margin; //X座標は出現順番×間隔\n    })\n    .y(function(d, i) {\n      return svgHeight - (d[itemName] * scale) - offsetY; //データからY座標を減算\n    })\n    //曲線で表示\n    .curve(d3.curveNatural)\n\n  //折れ線グラフを描画\n  var lineElements = d3.select('#myGraph')\n    .append('path')\n    .attr('class', 'line ' + cssClassName)\n    .attr('d', line(dataSet));\n}\n\n//グラフの目盛りを表示するための関数\nfunction drawScale() {\n  //目盛りを表示するためにスケールを設定\n  var yScale = d3.scaleLinear()\n    .domain([0, 100])\n    .range([scale * 100, 0]);\n\n  //目盛りを表示\n  d3.select('#myGraph')\n    .append('g')\n    .attr('class', 'axis')\n    .attr('transform', 'translate(' + offsetX + ', ' + ((100 - (scale - 1) * 100) + offsetY) + ')')\n    .call(\n      d3.axisLeft(yScale)\n    );\n\n  //横方向の線を表示する\n  d3.select('#myGraph')\n    .append('rect')\n    .attr('class', 'axis_x')\n    .attr('width', svgWidth)\n    .attr('height', 1)\n    .attr('transform', 'translate(' + offsetX + ', ' + ( svgHeight - offsetY ) + ')');\n\n  //横の目盛りを表示するためにD3スケールを設定\n  var xScale = d3.scaleTime()\n    .domain([new Date( currentYear + '/1/1'), new Date( (currentYear + rangeYear - 1) + '/1/1')])\n    .range([0, svgWidth]);\n\n  //横の目盛りを表示\n  d3.select('#myGraph')\n    .append('g')\n    .attr('class', 'axis')\n    .attr('transform', 'translate(' + offsetX + ', ' + ( svgHeight - offsetY ) + ')')\n    .call(\n      d3.axisBottom(xScale)\n        .ticks(10)\n        .tickFormat(function(d, i) {\n          var fmtFunc = d3.timeFormat('%Y年%m月');\n          return fmtFunc(d);\n        })\n    )\n    .selectAll('text')\n    .attr('transform', 'rotate(90)')\n    .attr('dx', '0.7em')\n    .attr('dy', '-0.4em')\n    .style('text-anchor', 'start');\n}\n\n// JSONデータから表示する範囲のデータセットを抽出し、SVG要素ないを消去\nfunction pickupData(data, start) {\n  dataSet = [];\n  for(var i = 0; i < rangeYear; i++) {\n    dataSet[i] = data[start + i];\n    d3.select('#myGraph').selectAll('*').remove();\n  }\n}\n\n(function() {\n  d3.json('/data/mydata.json', function(error, d) {\n    data = d;\n    render();\n  });\n  // 「前へ」ボタンにイベントを割り当てる\n  d3.select('#prev').on('click', function() {\n    // 最小値（年）より大きい場合は年数を１つ減らす\n    if( currentYear > year[0] ) {\n      currentYear = currentYear - 1;\n    }\n    //グラフを表示\n    drawGraphs();\n  });\n  //「次へ」ボタンにイベントを割り当てる\n  d3.select('#next').on('click', function() {\n    // 最大値（年）＋範囲より小さい場合は年数を１つ増やす\n    if( currentYear <= year[1] - rangeYear ) {\n      currentYear = currentYear + 1;\n    }\n    //グラフを表示\n    drawGraphs();\n  });\n}());\n"],"sourceRoot":"SORUCE_DIR"}